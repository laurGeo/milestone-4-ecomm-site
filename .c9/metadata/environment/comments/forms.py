{"changed":true,"filter":false,"title":"forms.py","tooltip":"/comments/forms.py","value":"","undoManager":{"mark":5,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    username_or_email = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","","class UserRegistrationForm(UserCreationForm):","    password1 = forms.CharField(label='Password', widget=forms.PasswordInput)","    password2 = forms.CharField(","        label='Password Confirmation',","        widget=forms.PasswordInput","    )","","    class Meta:","        model = User","        fields = ['username', 'email', 'password1', 'password2']","","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email addresses must be unique.')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Password must not be empty\")","","        if password1 != password2:","            raise ValidationError(\"Passwords do not match\")","","        return password2",""],"id":1}],[{"start":{"row":5,"column":0},"end":{"row":11,"column":0},"action":"remove","lines":["","class UserLoginForm(forms.Form):","    username_or_email = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","",""],"id":2},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":34,"column":0},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","class UserRegistrationForm(UserCreationForm):","    password1 = forms.CharField(label='Password', widget=forms.PasswordInput)","    password2 = forms.CharField(","        label='Password Confirmation',","        widget=forms.PasswordInput","    )","","    class Meta:","        model = User","        fields = ['username', 'email', 'password1', 'password2']","","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email addresses must be unique.')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Password must not be empty\")","","        if password1 != password2:","            raise ValidationError(\"Passwords do not match\")","","        return password2",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":8,"column":71},"action":"insert","lines":["from django import forms","from .models import Post","","","class BlogPostForm(forms.ModelForm):","","    class Meta:","        model = Post","        fields = ('title', 'content', 'image', 'tag', 'published_date')"]}],[{"start":{"row":1,"column":20},"end":{"row":1,"column":24},"action":"remove","lines":["Post"],"id":4},{"start":{"row":1,"column":20},"end":{"row":1,"column":21},"action":"insert","lines":["C"]},{"start":{"row":1,"column":21},"end":{"row":1,"column":22},"action":"insert","lines":["o"]},{"start":{"row":1,"column":22},"end":{"row":1,"column":23},"action":"insert","lines":["m"]},{"start":{"row":1,"column":23},"end":{"row":1,"column":24},"action":"insert","lines":["m"]},{"start":{"row":1,"column":24},"end":{"row":1,"column":25},"action":"insert","lines":["e"]},{"start":{"row":1,"column":25},"end":{"row":1,"column":26},"action":"insert","lines":["n"]},{"start":{"row":1,"column":26},"end":{"row":1,"column":27},"action":"insert","lines":["t"]}],[{"start":{"row":4,"column":6},"end":{"row":4,"column":18},"action":"remove","lines":["BlogPostForm"],"id":5},{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"insert","lines":["C"]},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"insert","lines":["o"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["m"]},{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["m"]},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["e"]},{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"insert","lines":["n"]},{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"insert","lines":["t"]},{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"insert","lines":["F"]},{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"insert","lines":["o"]},{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"insert","lines":["r"]},{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["m"]}],[{"start":{"row":7,"column":16},"end":{"row":7,"column":20},"action":"remove","lines":["Post"],"id":6},{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"insert","lines":["C"]},{"start":{"row":7,"column":17},"end":{"row":7,"column":18},"action":"insert","lines":["o"]},{"start":{"row":7,"column":18},"end":{"row":7,"column":19},"action":"insert","lines":["m"]},{"start":{"row":7,"column":19},"end":{"row":7,"column":20},"action":"insert","lines":["m"]},{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"insert","lines":["e"]},{"start":{"row":7,"column":21},"end":{"row":7,"column":22},"action":"insert","lines":["n"]},{"start":{"row":7,"column":22},"end":{"row":7,"column":23},"action":"insert","lines":["t"]}],[{"start":{"row":8,"column":19},"end":{"row":8,"column":24},"action":"remove","lines":["title"],"id":7},{"start":{"row":8,"column":19},"end":{"row":8,"column":27},"action":"insert","lines":["username"]}],[{"start":{"row":8,"column":31},"end":{"row":8,"column":38},"action":"remove","lines":["content"],"id":8},{"start":{"row":8,"column":31},"end":{"row":8,"column":38},"action":"insert","lines":["content"]}],[{"start":{"row":8,"column":42},"end":{"row":8,"column":47},"action":"remove","lines":["image"],"id":9},{"start":{"row":8,"column":42},"end":{"row":8,"column":54},"action":"insert","lines":["created_date"]}],[{"start":{"row":8,"column":58},"end":{"row":8,"column":61},"action":"remove","lines":["tag"],"id":10},{"start":{"row":8,"column":58},"end":{"row":8,"column":63},"action":"insert","lines":["image"]}],[{"start":{"row":8,"column":67},"end":{"row":8,"column":81},"action":"remove","lines":["published_date"],"id":11},{"start":{"row":8,"column":67},"end":{"row":8,"column":68},"action":"insert","lines":["r"]},{"start":{"row":8,"column":68},"end":{"row":8,"column":69},"action":"insert","lines":["a"]},{"start":{"row":8,"column":69},"end":{"row":8,"column":70},"action":"insert","lines":["t"]},{"start":{"row":8,"column":70},"end":{"row":8,"column":71},"action":"insert","lines":["e"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":30.3466796875,"selection":{"start":{"row":8,"column":73},"end":{"row":8,"column":73},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1572544947873}